version: '3'

services:

  db:
    build:
      context: "./db"
      dockerfile: "Dockerfile"
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - asi


  proxy:
    ports:
      - 80:80
    restart: unless-stopped
    build:
      context: "./proxy"
      dockerfile: "Dockerfile"
    environment:
      FRONT_SERVER: "frontend:5000"
      BACK_SERVER: "backend:8080"
    privileged: true
    networks:
      - asi
    depends_on:
      - backend
      - frontend


  backend:
    build:
      context: "./app"
      dockerfile: "Dockerfile"
    networks:
      - asi
    environment:
      DATABASE_DATABASE: postgres
      DATABASE_HOST: db
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: admin
    depends_on:
      - db

  frontend:
    build:
      context: "./front"
      dockerfile: "Dockerfile"
      networks:
        - asi


networks:
  asi:

volumes:
  pgdata:
